
### AOSP TREE
ANDROID_BUILD_TOP=$$(ANDROID_BUILD_TOP)
isEmpty(ANDROID_BUILD_TOP) : error("$ANDROID_BUILD_TOP is empty. Forgot to run 'lunch'?")

ANDROID_PRODUCT_OUT=$$(ANDROID_PRODUCT_OUT)
isEmpty(ANDROID_PRODUCT_OUT) : error("$ANDROID_PRODUCT_OUT is empty. forgot to run 'lunch'?")

###
MAKEFILE_GENERATOR      = UNIX
CONFIG                 += incremental
QMAKE_COMPILER          = gcc clang llvm
QMAKE_INCREMENTAL_STYLE = sublib

include(../common/linux.conf)
include(../common/gcc-base-unix.conf)
include(../common/clang.conf)

### NDK
NDK_HOST                = linux-x86_64
NDK_LLVM_PATH           = /usr/lib/android-sdk/ndk-bundle/toolchains/llvm/prebuilt/$$NDK_HOST

ANDROID_PLATFORM        = android-23
CONFIG                 += $$ANDROID_PLATFORM

DEFINES                += __ANDROID_API__=23
#DEFINES                += ANDROID

###
CONFIG                 += unversioned_soname unversioned_libname plugin_with_soname
QT                      = core gui widgets dbus multimedia
DEFINES                += Q_OS_ANDROID Q_OS_ANDROID_EMBEDDED # SHOULD AVOID SDK / JNI
CONFIG                 += android-embedded

###
QMAKE_CC                = $${NDK_LLVM_PATH}/bin/clang

QMAKE_CFLAGS            = -target aarch64-linux-android$$replace(ANDROID_PLATFORM, "android-", "")
QMAKE_CFLAGS           += -fno-limit-debug-info -DANDROID
QMAKE_CFLAGS           -= -Werror=non-virtual-dtor
QMAKE_CFLAGS           -= -DNDEBUG

QMAKE_CFLAGS_WARN_ON    = -Wall -Wextra
QMAKE_CFLAGS_WARN_OFF   =

QMAKE_CFLAGS_SHLIB      = -fPIC
QMAKE_CFLAGS_YACC       = -Wno-unused -Wno-parentheses
QMAKE_CFLAGS_THREAD     = -D_REENTRANT
QMAKE_CFLAGS_HIDESYMS   =

QMAKE_CXX               = $${NDK_LLVM_PATH}/bin/clang++
QMAKE_CXXFLAGS          = $$QMAKE_CFLAGS
QMAKE_CXXFLAGS_WARN_ON  = $$QMAKE_CFLAGS_WARN_ON
QMAKE_CXXFLAGS_WARN_OFF = $$QMAKE_CFLAGS_WARN_OFF
QMAKE_CXXFLAGS_RELEASE += $$QMAKE_CFLAGS_RELEASE
QMAKE_CXXFLAGS_DEBUG   += $$QMAKE_CFLAGS_DEBUG
QMAKE_CXXFLAGS_SHLIB    = $$QMAKE_CFLAGS_SHLIB
QMAKE_CXXFLAGS_YACC     = $$QMAKE_CFLAGS_YACC
QMAKE_CXXFLAGS_THREAD   = $$QMAKE_CFLAGS_THREAD
QMAKE_CXXFLAGS_HIDESYMS = $$QMAKE_CFLAGS_HIDESYMS -fvisibility-inlines-hidden

QMAKE_AR                = $${NDK_LLVM_PATH}/bin/llvm-ar cqs
QMAKE_OBJCOPY           = $${NDK_LLVM_PATH}/bin/llvm-objcopy
QMAKE_NM                = $${NDK_LLVM_PATH}/bin/llvm-nm -P
QMAKE_STRIP             = $${NDK_LLVM_PATH}/bin/aarch64-linux-android-strip
QMAKE_RANLIB            = $${NDK_LLVM_PATH}/bin/aarch64-linux-android-ranlib

ANDROID_USE_LLVM        = true

### INC AND LIBS
#QMAKE_LIBDIR            = $${ANDROID_PRODUCT_OUT}/obj/lib
#QMAKE_LIBDIR            = $${NDK_LLVM_PATH}/sysroot/usr/lib/aarch64-linux-android/23
#QMAKE_INCDIR            = $${NDK_LLVM_PATH}/sysroot/usr/include

QMAKE_LIBDIR_POST       = $${ANDROID_PRODUCT_OUT}/obj/lib
QMAKE_INCDIR_POST       =

QMAKE_LIBS_X11          =
QMAKE_LIBS_THREAD       =
QMAKE_LIBS_OPENGL       =
QMAKE_INCDIR_X11        =
QMAKE_LIBDIR_X11        =
QMAKE_INCDIR_OPENGL     =
QMAKE_LIBDIR_OPENGL     =

### LINKER AND LIBS
QMAKE_LINK              = $$QMAKE_CXX
QMAKE_LINK_SHLIB        = $$QMAKE_LINK
QMAKE_LFLAGS            = -target aarch64-linux-android$$replace(ANDROID_PLATFORM, "android-", "")

QMAKE_LFLAGS_APP        = -Wl,--no-undefined -Wl,-z,noexecstack -shared

QMAKE_LFLAGS_SHLIB      = -Wl,--no-undefined -Wl,-z,noexecstack -shared

QMAKE_LFLAGS_PLUGIN     = $$QMAKE_LFLAGS_SHLIB

QMAKE_LFLAGS_SONAME     =
QMAKE_LFLAGS_NOUNDEF    = -Wl,--no-undefined
QMAKE_LFLAGS_RPATH      = -Wl,-rpath=
QMAKE_LFLAGS_RPATHLINK  = -Wl,-rpath-link=

QMAKE_LIBS_EGL          = -lEGL
QMAKE_LIBS_OPENGL_ES2   = -lGLESv2 -lGLESv3

QMAKE_LIBS_PRIVATE      = -llog -lz -lm -ldl -lc -landroid

### EGLFS
EGLFS_DEVICE_INTEGRATION = eglfs_surfaceflinger

load(qt_config)
