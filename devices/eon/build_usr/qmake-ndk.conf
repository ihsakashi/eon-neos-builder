ANDROID_BUILD_TOP=$$(ANDROID_BUILD_TOP)
isEmpty(ANDROID_BUILD_TOP) : error("$ANDROID_BUILD_TOP is empty. Forgot to run 'lunch'?")

ANDROID_PRODUCT_OUT=$$(ANDROID_PRODUCT_OUT)
isEmpty(ANDROID_PRODUCT_OUT) : error("$ANDROID_PRODUCT_OUT is empty. forgot to run 'lunch'?")

defineReplace(getAndroidBuildVar) {
    thevar = $$1
    r=$$system(cd $$ANDROID_BUILD_TOP && CALLED_FROM_SETUP=true BUILD_SYSTEM=build/core make --no-print-directory -f build/core/config.mk dumpvar-$${thevar})
    return($$r)
}

# .qmake.cache is not available at mkspec loading time.
# not caching those is horribly slow though

!exists($$PWD/android_build_vars) {
    store_ANDROID_TOOLCHAIN_PREFIX = "ANDROID_TOOLCHAIN_PREFIX=$$getAndroidBuildVar(abs-TARGET_TOOLS_PREFIX)"
    store_ANDROID_TOOLCHAIN_VERSION = "ANDROID_TOOLCHAIN_VERSION=$$getAndroidBuildVar(TARGET_NDK_GCC_VERSION)"
    store_ANDROID_TARGET_CFLAGS    = "ANDROID_TARGET_CFLAGS=$$getAndroidBuildVar(TARGET_GLOBAL_CFLAGS)"
    store_ANDROID_TARGET_LDFLAGS   = "ANDROID_TARGET_LDFLAGS=$$getAndroidBuildVar(TARGET_GLOBAL_LDFLAGS)"
    store_ANDROID_TARGET_ARCH      = "ANDROID_TARGET_ARCH=$$getAndroidBuildVar(TARGET_ARCH)"
    store_ANDROID_VERSION          = "ANDROID_VERSION=$$getAndroidBuildVar(PLATFORM_VERSION)"

    write_file(android_build_vars, store_ANDROID_TOOLCHAIN_PREFIX)
    write_file(android_build_vars, store_ANDROID_TOOLCHAIN_VERSION, append)
    write_file(android_build_vars, store_ANDROID_TARGET_CFLAGS, append)
    write_file(android_build_vars, store_ANDROID_TARGET_LDFLAGS, append)
    write_file(android_build_vars, store_ANDROID_TARGET_ARCH, append)
    write_file(android_build_vars, store_ANDROID_VERSION, append)
}

exists($$PWD/android_build_vars) {
    include($$PWD/android_build_vars)
}

QT_QPA_DEFAULT_PLATFORM = eglfs
EGLFS_DEVICE_INTEGRATION    = eglfs_surfaceflinger

MAKEFILE_GENERATOR      = UNIX
CONFIG                 += incremental
QMAKE_COMPILER          = gcc
QMAKE_INCREMENTAL_STYLE = sublib

include(../../common/linux.conf)
include(../../common/gcc-base-unix.conf)

load(device_config)

equals(ANDROID_TARGET_ARCH, arm64): ANDROID_NDK_ARCH = arm64-v8a

ANDROID_PLATFORM        = android-21
CONFIG                 += $$ANDROID_PLATFORM
QMAKE_CFLAGS            = -D__ANDROID_API__=$$replace(ANDROID_PLATFORM, "android-", "")

ANDROID_PLATFORM_ROOT_PATH  = $$ANDROID_BUILD_TOP/prebuilts/ndk/current/platforms/$$ANDROID_PLATFORM/arch-$$ANDROID_TARGET_ARCH/

DEFINES                += Q_OS_ANDROID_EMBEDDED
CONFIG                 += android-embedded

QMAKE_CC                = $${ANDROID_TOOLCHAIN_PREFIX}gcc
QMAKE_CXX               = $${ANDROID_TOOLCHAIN_PREFIX}g++
QMAKE_LINK              = $$QMAKE_CXX

ANDROID_SOURCES_CXX_STL_LIBDIR  = $$ANDROID_BUILD_TOP/prebuilts/ndk/current/sources/cxx-stl/gnu-libstdc++/$$ANDROID_TOOLCHAIN_VERSION/libs/$$ANDROID_NDK_ARCH
ANDROID_STDCPP_PATH     = $$ANDROID_SOURCES_CXX_STL_LIBDIR/libgnustl_shared.so
ANDROID_CXX_STL_LIBS    = -lgnustl_shared -lgcc
ANDROID_USE_LLVM        = false

QMAKE_CFLAGS           += --sysroot=$$ANDROID_PLATFORM_ROOT_PATH

QMAKE_CFLAGS           += -isystem $$ANDROID_BUILD_TOP/prebuilts/ndk/current/sources/cxx-stl/gnu-libstdc++/$$ANDROID_TOOLCHAIN_VERSION/include \
                          -isystem $$ANDROID_SOURCES_CXX_STL_LIBDIR/include

LIBGCC_PATH_FULL = $$system("$$QMAKE_CXX -print-libgcc-file-name")
ANDROID_SOURCES_CXX_STL_LIBDIR += $$dirname(LIBGCC_PATH_FULL)

QMAKE_CFLAGS            += -fstack-protector-strong -DANDROID

QMAKE_CFLAGS_WARN_ON    = -Wall -W
QMAKE_CFLAGS_WARN_OFF   =

QMAKE_CFLAGS_SHLIB      = -fPIC
QMAKE_CFLAGS_YACC       = -Wno-unused -Wno-parentheses
QMAKE_CFLAGS_THREAD     = -D_REENTRANT
QMAKE_CFLAGS_HIDESYMS   = -fvisibility=hidden
QMAKE_CFLAGS_NEON       = -mfpu=neon

QMAKE_CFLAGS_GNUC99     = -std=gnu99
QMAKE_CFLAGS_GNUC11     = -std=gnu11
QMAKE_CXXFLAGS_CXX11    = -std=c++11
QMAKE_CXXFLAGS_CXX14    = -std=c++14
QMAKE_CXXFLAGS_CXX1Z    = -std=c++1z
QMAKE_CXXFLAGS_GNUCXX11 = -std=gnu++11
QMAKE_CXXFLAGS_GNUCXX14 = -std=gnu++14
QMAKE_CXXFLAGS_GNUCXX1Z = -std=gnu++1z

QMAKE_CXXFLAGS          = $$QMAKE_CFLAGS
QMAKE_CXXFLAGS_WARN_ON  = $$QMAKE_CFLAGS_WARN_ON
QMAKE_CXXFLAGS_WARN_OFF = $$QMAKE_CFLAGS_WARN_OFF
QMAKE_CXXFLAGS_RELEASE += $$QMAKE_CFLAGS_RELEASE
QMAKE_CXXFLAGS_RELEASE_WITH_DEBUGINFO += $$QMAKE_CFLAGS_RELEASE_WITH_DEBUGINFO
QMAKE_CXXFLAGS_DEBUG   += $$QMAKE_CFLAGS_DEBUG
QMAKE_CXXFLAGS_SHLIB    = $$QMAKE_CFLAGS_SHLIB
QMAKE_CXXFLAGS_YACC     = $$QMAKE_CFLAGS_YACC
QMAKE_CXXFLAGS_THREAD   = $$QMAKE_CFLAGS_THREAD
QMAKE_CXXFLAGS_HIDESYMS = $$QMAKE_CFLAGS_HIDESYMS -fvisibility-inlines-hidden

QMAKE_AR                = $${ANDROID_TOOLCHAIN_PREFIX}ar cqs
QMAKE_OBJCOPY           = $${ANDROID_TOOLCHAIN_PREFIX}objcopy
QMAKE_NM                = $${ANDROID_TOOLCHAIN_PREFIX}nm -P

QMAKE_STRIP             = $${ANDROID_TOOLCHAIN_PREFIX}strip

QMAKE_RANLIB            = $${ANDROID_TOOLCHAIN_PREFIX}ranlib

QMAKE_INCDIR_POST       =
QMAKE_LIBDIR_POST       = $$ANDROID_SOURCES_CXX_STL_LIBDIR $${ANDROID_PRODUCT_OUT}/obj/lib
QMAKE_INCDIR_X11        =
QMAKE_LIBDIR_X11        =
QMAKE_INCDIR_OPENGL     =
QMAKE_LIBDIR_OPENGL     =

QMAKE_LINK_SHLIB        = $$QMAKE_LINK
QMAKE_LFLAGS            = --sysroot=$$ANDROID_PLATFORM_ROOT_PATH
QMAKE_LFLAGS_APP        = -Wl,--no-undefined -Wl,-z,noexecstack -shared
QMAKE_LFLAGS_SHLIB      = -Wl,--no-undefined -Wl,-z,noexecstack -shared
QMAKE_LFLAGS_PLUGIN     = $$QMAKE_LFLAGS_SHLIB
QMAKE_LFLAGS_NOUNDEF    = -Wl,--no-undefined
QMAKE_LFLAGS_RPATH      = -Wl,-rpath=
QMAKE_LFLAGS_RPATHLINK  = -Wl,-rpath-link=

QMAKE_LIBS_PRIVATE      = $$ANDROID_CXX_STL_LIBS -llog -lz -lm -ldl -lc
QMAKE_LIBS_X11          =
QMAKE_LIBS_THREAD       =
QMAKE_LIBS_EGL          = -lEGL
QMAKE_LIBS_OPENGL       =
QMAKE_LIBS_OPENGL_ES2   = -lGLESv2

load(qt_config)
